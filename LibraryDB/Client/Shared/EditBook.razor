@inject IBookService BookService
@inject IJSRuntime JSRuntiime

<h3>Edit Book</h3>

<EditForm Model="Book" OnSubmit="HandleSubmit">
    <div class="form-group">
        <label>Title</label>
        <InputText @bind-Value="Book.Title" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Description</label>
        <InputText @bind-Value="Book.Description" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Author</label>
        <InputText @bind-Value="Book.Author" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Year</label>
        <InputText @bind-Value="Book.Year" class="form-control"></InputText>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    public LibraryDB.Shared.Book Book { get; set; } = new LibraryDB.Shared.Book();


    protected override async Task OnInitializedAsync()
    {
        await BookService.GetBooks();

    }

    async void HandleSubmit()
    {
        JSRuntiime.InvokeVoidAsync("console.log", Book);

        await BookService.CreateBook(Book);
    }
}
